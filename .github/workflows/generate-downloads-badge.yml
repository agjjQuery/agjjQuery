name: Generate Downloads Badge

on:
  schedule:
    - cron: '0 * * * *' # run hourly
  workflow_dispatch: # allow manual triggering

permissions:
  contents: write

jobs:
  fetch-downloads:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch downloads total
        run: |
          REPOS=(
            #"agjjquery"
            "agjcalendar"
          )
          TOTAL_DOWNLOADS=0
          END_DATE=$(date +"%Y-%m-%d")
          for REPO in "${REPOS[@]}"; do
            curl -s "https://api.npmjs.org/downloads/range/2000-01-01:${END_DATE}/$REPO" -o tmp.json
            DOWNLOADS_TOTAL=$(jq '[.downloads[].downloads] | add' tmp.json)
            TOTAL_DOWNLOADS=$((TOTAL_DOWNLOADS + DOWNLOADS_TOTAL))
            rm -rf tmp.json
          done
          echo "Total Downloads: $TOTAL_DOWNLOADS"
          echo "TOTAL_DOWNLOADS=$TOTAL_DOWNLOADS" >> $GITHUB_ENV

      - name: Update badge
        run: |
          BADGE_URL="https://raster.shields.io/badge/downloads-"

          if [ $TOTAL_DOWNLOADS -ge 999500 ]; then
            ROUNDED_DOWNLOADS=$(( (TOTAL_DOWNLOADS) / 1000000 ))
            BADGE_URL="${BADGE_URL}${ROUNDED_DOWNLOADS}M"
          elif [ $TOTAL_DOWNLOADS -ge 1000 ]; then
            ROUNDED_DOWNLOADS=$(( (TOTAL_DOWNLOADS) / 1000 ))
            BADGE_URL="${BADGE_URL}${ROUNDED_DOWNLOADS}k"
          else
            BADGE_URL="${BADGE_URL}${TOTAL_DOWNLOADS}"
          fi

          BADGE_URL="${BADGE_URL}-0366d6.png?colorB=0366d6&style=flat-square&logoColor=white&logo=npm"

          echo "Downloading badge from URL: $BADGE_URL"
          curl -L "$BADGE_URL" -o documentation/agjjQuery.org/images/downloads-badge.png

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add documentation/agjjQuery.org/images/downloads-badge.png
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "Update downloads badge"
            git push
          else
            echo "No changes to commit"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
